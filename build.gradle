plugins {
	id 'java'
	id 'eclipse'
	id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
	id 'me.hypherionmc.cursegradle' version '2.+'
}

archivesBaseName = "${mod_name}-${minecraft_version}"
version = mod_version

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
javadoc.options.addStringOption('Xdoclint:none', '-quiet')
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + ' (' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
	mappings channel: 'official', version: minecraft_version
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		configureEach {
			workingDirectory project.file('run')
		}
		
		client {
			taskName "${project.name}Client"
		}
		
		server {
			taskName "${project.name}Server"
		}
		
		gameTestServer {
			taskName "${project.name}GameTest"
			property 'forge.enabledGameTestNamespaces', mod_id
		}
		
		data {
			workingDirectory project.file('run-data')
			taskName "${project.name}Data"
			args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('jar', Jar).configure {
	manifest {
		attributes([
			"Specification-Title": "${mod_id}",
			"Specification-Vendor": "${author}",
			"Specification-Version": "1",
			"Implementation-Title": "${mod_name}",
			"Implementation-Version": "${minecraft_version}-${version}",
			"Implementation-Vendor": "${author}",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"Main-Class": "${main_class}"
		])
	}
}

tasks.named('processResources', ProcessResources).configure {
	outputs.upToDateWhen {
		false
	}
	
	from sourceSets.main.resources
	
    filesMatching(['META-INF/mods.toml']) {
        expand project.properties
    }
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

curseforge {
	apiKey = project.hasProperty("curse_api_key") ? curse_api_key : ''
	project {
		id = curse_project_id
		changelog = file('changelog.txt').canRead() ? file('changelog.txt').text : ''
		changelogType = 'text'
		releaseType = 'release'
		addGameVersion 'Forge'
		forge_compatible_minecraft_versions.split(",").each {
			addGameVersion(it)
		}
		mainArtifact(jar) {
			displayName = "${minecraft_version}-${mod_version} Universal"
		}
	}
	options {
		javaVersionAutoDetect = false
		forgeGradleIntegration = false
	}
}
